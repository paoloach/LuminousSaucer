//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api.proto

package it.achdjian.sottovasoluminoso.protobuf.java;

@kotlin.jvm.JvmName("-initializelistEntitiesLightResponse")
public inline fun listEntitiesLightResponse(block: it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponseKt.Dsl.() -> kotlin.Unit): it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponse =
  it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponseKt.Dsl._create(it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponse.newBuilder()).apply { block() }._build()
public object ListEntitiesLightResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponse = _builder.build()

    /**
     * <code>string object_id = 1;</code>
     */
    public var objectId: kotlin.String
      @JvmName("getObjectId")
      get() = _builder.getObjectId()
      @JvmName("setObjectId")
      set(value) {
        _builder.setObjectId(value)
      }
    /**
     * <code>string object_id = 1;</code>
     */
    public fun clearObjectId() {
      _builder.clearObjectId()
    }

    /**
     * <code>fixed32 key = 2;</code>
     */
    public var key: kotlin.Int
      @JvmName("getKey")
      get() = _builder.getKey()
      @JvmName("setKey")
      set(value) {
        _builder.setKey(value)
      }
    /**
     * <code>fixed32 key = 2;</code>
     */
    public fun clearKey() {
      _builder.clearKey()
    }

    /**
     * <code>string name = 3;</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 3;</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>string unique_id = 4;</code>
     */
    public var uniqueId: kotlin.String
      @JvmName("getUniqueId")
      get() = _builder.getUniqueId()
      @JvmName("setUniqueId")
      set(value) {
        _builder.setUniqueId(value)
      }
    /**
     * <code>string unique_id = 4;</code>
     */
    public fun clearUniqueId() {
      _builder.clearUniqueId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SupportedColorModesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .it.achdjian.sottovasoluminoso.protobuf.java.ColorMode supported_color_modes = 12;</code>
     */
    public val supportedColorModes: com.google.protobuf.kotlin.DslList<it.achdjian.sottovasoluminoso.protobuf.java.ColorMode, SupportedColorModesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSupportedColorModesList()
      )
    /**
     * <code>repeated .it.achdjian.sottovasoluminoso.protobuf.java.ColorMode supported_color_modes = 12;</code>
     * @param value The supportedColorModes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSupportedColorModes")
    public fun com.google.protobuf.kotlin.DslList<it.achdjian.sottovasoluminoso.protobuf.java.ColorMode, SupportedColorModesProxy>.add(value: it.achdjian.sottovasoluminoso.protobuf.java.ColorMode) {
      _builder.addSupportedColorModes(value)
    }/**
     * <code>repeated .it.achdjian.sottovasoluminoso.protobuf.java.ColorMode supported_color_modes = 12;</code>
     * @param value The supportedColorModes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSupportedColorModes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<it.achdjian.sottovasoluminoso.protobuf.java.ColorMode, SupportedColorModesProxy>.plusAssign(value: it.achdjian.sottovasoluminoso.protobuf.java.ColorMode) {
      add(value)
    }/**
     * <code>repeated .it.achdjian.sottovasoluminoso.protobuf.java.ColorMode supported_color_modes = 12;</code>
     * @param values The supportedColorModes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSupportedColorModes")
    public fun com.google.protobuf.kotlin.DslList<it.achdjian.sottovasoluminoso.protobuf.java.ColorMode, SupportedColorModesProxy>.addAll(values: kotlin.collections.Iterable<it.achdjian.sottovasoluminoso.protobuf.java.ColorMode>) {
      _builder.addAllSupportedColorModes(values)
    }/**
     * <code>repeated .it.achdjian.sottovasoluminoso.protobuf.java.ColorMode supported_color_modes = 12;</code>
     * @param values The supportedColorModes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSupportedColorModes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<it.achdjian.sottovasoluminoso.protobuf.java.ColorMode, SupportedColorModesProxy>.plusAssign(values: kotlin.collections.Iterable<it.achdjian.sottovasoluminoso.protobuf.java.ColorMode>) {
      addAll(values)
    }/**
     * <code>repeated .it.achdjian.sottovasoluminoso.protobuf.java.ColorMode supported_color_modes = 12;</code>
     * @param index The index to set the value at.
     * @param value The supportedColorModes to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSupportedColorModes")
    public operator fun com.google.protobuf.kotlin.DslList<it.achdjian.sottovasoluminoso.protobuf.java.ColorMode, SupportedColorModesProxy>.set(index: kotlin.Int, value: it.achdjian.sottovasoluminoso.protobuf.java.ColorMode) {
      _builder.setSupportedColorModes(index, value)
    }/**
     * <code>repeated .it.achdjian.sottovasoluminoso.protobuf.java.ColorMode supported_color_modes = 12;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSupportedColorModes")
    public fun com.google.protobuf.kotlin.DslList<it.achdjian.sottovasoluminoso.protobuf.java.ColorMode, SupportedColorModesProxy>.clear() {
      _builder.clearSupportedColorModes()
    }
    /**
     * <pre>
     * next four supports_* are for legacy clients, newer clients should use color modes
     * </pre>
     *
     * <code>bool legacy_supports_brightness = 5 [deprecated = true];</code>
     */
    @kotlin.Deprecated(message = "Field legacySupportsBrightness is deprecated") public var legacySupportsBrightness: kotlin.Boolean
      @JvmName("getLegacySupportsBrightness")
      get() = _builder.getLegacySupportsBrightness()
      @JvmName("setLegacySupportsBrightness")
      set(value) {
        _builder.setLegacySupportsBrightness(value)
      }
    /**
     * <pre>
     * next four supports_* are for legacy clients, newer clients should use color modes
     * </pre>
     *
     * <code>bool legacy_supports_brightness = 5 [deprecated = true];</code>
     * @deprecated it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponse.legacy_supports_brightness is deprecated.
     *     See api.proto;l=424
     */
    public fun clearLegacySupportsBrightness() {
      _builder.clearLegacySupportsBrightness()
    }

    /**
     * <code>bool legacy_supports_rgb = 6 [deprecated = true];</code>
     */
    @kotlin.Deprecated(message = "Field legacySupportsRgb is deprecated") public var legacySupportsRgb: kotlin.Boolean
      @JvmName("getLegacySupportsRgb")
      get() = _builder.getLegacySupportsRgb()
      @JvmName("setLegacySupportsRgb")
      set(value) {
        _builder.setLegacySupportsRgb(value)
      }
    /**
     * <code>bool legacy_supports_rgb = 6 [deprecated = true];</code>
     * @deprecated it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponse.legacy_supports_rgb is deprecated.
     *     See api.proto;l=425
     */
    public fun clearLegacySupportsRgb() {
      _builder.clearLegacySupportsRgb()
    }

    /**
     * <code>bool legacy_supports_white_value = 7 [deprecated = true];</code>
     */
    @kotlin.Deprecated(message = "Field legacySupportsWhiteValue is deprecated") public var legacySupportsWhiteValue: kotlin.Boolean
      @JvmName("getLegacySupportsWhiteValue")
      get() = _builder.getLegacySupportsWhiteValue()
      @JvmName("setLegacySupportsWhiteValue")
      set(value) {
        _builder.setLegacySupportsWhiteValue(value)
      }
    /**
     * <code>bool legacy_supports_white_value = 7 [deprecated = true];</code>
     * @deprecated it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponse.legacy_supports_white_value is deprecated.
     *     See api.proto;l=426
     */
    public fun clearLegacySupportsWhiteValue() {
      _builder.clearLegacySupportsWhiteValue()
    }

    /**
     * <code>bool legacy_supports_color_temperature = 8 [deprecated = true];</code>
     */
    @kotlin.Deprecated(message = "Field legacySupportsColorTemperature is deprecated") public var legacySupportsColorTemperature: kotlin.Boolean
      @JvmName("getLegacySupportsColorTemperature")
      get() = _builder.getLegacySupportsColorTemperature()
      @JvmName("setLegacySupportsColorTemperature")
      set(value) {
        _builder.setLegacySupportsColorTemperature(value)
      }
    /**
     * <code>bool legacy_supports_color_temperature = 8 [deprecated = true];</code>
     * @deprecated it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponse.legacy_supports_color_temperature is deprecated.
     *     See api.proto;l=427
     */
    public fun clearLegacySupportsColorTemperature() {
      _builder.clearLegacySupportsColorTemperature()
    }

    /**
     * <code>float min_mireds = 9;</code>
     */
    public var minMireds: kotlin.Float
      @JvmName("getMinMireds")
      get() = _builder.getMinMireds()
      @JvmName("setMinMireds")
      set(value) {
        _builder.setMinMireds(value)
      }
    /**
     * <code>float min_mireds = 9;</code>
     */
    public fun clearMinMireds() {
      _builder.clearMinMireds()
    }

    /**
     * <code>float max_mireds = 10;</code>
     */
    public var maxMireds: kotlin.Float
      @JvmName("getMaxMireds")
      get() = _builder.getMaxMireds()
      @JvmName("setMaxMireds")
      set(value) {
        _builder.setMaxMireds(value)
      }
    /**
     * <code>float max_mireds = 10;</code>
     */
    public fun clearMaxMireds() {
      _builder.clearMaxMireds()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class EffectsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string effects = 11;</code>
     * @return A list containing the effects.
     */
    public val effects: com.google.protobuf.kotlin.DslList<kotlin.String, EffectsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getEffectsList()
      )
    /**
     * <code>repeated string effects = 11;</code>
     * @param value The effects to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addEffects")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, EffectsProxy>.add(value: kotlin.String) {
      _builder.addEffects(value)
    }
    /**
     * <code>repeated string effects = 11;</code>
     * @param value The effects to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignEffects")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, EffectsProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <code>repeated string effects = 11;</code>
     * @param values The effects to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllEffects")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, EffectsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllEffects(values)
    }
    /**
     * <code>repeated string effects = 11;</code>
     * @param values The effects to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllEffects")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, EffectsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <code>repeated string effects = 11;</code>
     * @param index The index to set the value at.
     * @param value The effects to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setEffects")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, EffectsProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setEffects(index, value)
    }/**
     * <code>repeated string effects = 11;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearEffects")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, EffectsProxy>.clear() {
      _builder.clearEffects()
    }
    /**
     * <code>bool disabled_by_default = 13;</code>
     */
    public var disabledByDefault: kotlin.Boolean
      @JvmName("getDisabledByDefault")
      get() = _builder.getDisabledByDefault()
      @JvmName("setDisabledByDefault")
      set(value) {
        _builder.setDisabledByDefault(value)
      }
    /**
     * <code>bool disabled_by_default = 13;</code>
     */
    public fun clearDisabledByDefault() {
      _builder.clearDisabledByDefault()
    }

    /**
     * <code>string icon = 14;</code>
     */
    public var icon: kotlin.String
      @JvmName("getIcon")
      get() = _builder.getIcon()
      @JvmName("setIcon")
      set(value) {
        _builder.setIcon(value)
      }
    /**
     * <code>string icon = 14;</code>
     */
    public fun clearIcon() {
      _builder.clearIcon()
    }

    /**
     * <code>.it.achdjian.sottovasoluminoso.protobuf.java.EntityCategory entity_category = 15;</code>
     */
    public var entityCategory: it.achdjian.sottovasoluminoso.protobuf.java.EntityCategory
      @JvmName("getEntityCategory")
      get() = _builder.getEntityCategory()
      @JvmName("setEntityCategory")
      set(value) {
        _builder.setEntityCategory(value)
      }
    /**
     * <code>.it.achdjian.sottovasoluminoso.protobuf.java.EntityCategory entity_category = 15;</code>
     */
    public fun clearEntityCategory() {
      _builder.clearEntityCategory()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponse.copy(block: it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponseKt.Dsl.() -> kotlin.Unit): it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponse =
  it.achdjian.sottovasoluminoso.protobuf.java.ListEntitiesLightResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

