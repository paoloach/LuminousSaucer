// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

package it.achdjian.sottovasoluminoso.protobuf.java;

/**
 * Protobuf enum {@code it.achdjian.sottovasoluminoso.protobuf.java.ClimateFanMode}
 */
public enum ClimateFanMode
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>CLIMATE_FAN_ON = 0;</code>
   */
  CLIMATE_FAN_ON(0),
  /**
   * <code>CLIMATE_FAN_OFF = 1;</code>
   */
  CLIMATE_FAN_OFF(1),
  /**
   * <code>CLIMATE_FAN_AUTO = 2;</code>
   */
  CLIMATE_FAN_AUTO(2),
  /**
   * <code>CLIMATE_FAN_LOW = 3;</code>
   */
  CLIMATE_FAN_LOW(3),
  /**
   * <code>CLIMATE_FAN_MEDIUM = 4;</code>
   */
  CLIMATE_FAN_MEDIUM(4),
  /**
   * <code>CLIMATE_FAN_HIGH = 5;</code>
   */
  CLIMATE_FAN_HIGH(5),
  /**
   * <code>CLIMATE_FAN_MIDDLE = 6;</code>
   */
  CLIMATE_FAN_MIDDLE(6),
  /**
   * <code>CLIMATE_FAN_FOCUS = 7;</code>
   */
  CLIMATE_FAN_FOCUS(7),
  /**
   * <code>CLIMATE_FAN_DIFFUSE = 8;</code>
   */
  CLIMATE_FAN_DIFFUSE(8),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>CLIMATE_FAN_ON = 0;</code>
   */
  public static final int CLIMATE_FAN_ON_VALUE = 0;
  /**
   * <code>CLIMATE_FAN_OFF = 1;</code>
   */
  public static final int CLIMATE_FAN_OFF_VALUE = 1;
  /**
   * <code>CLIMATE_FAN_AUTO = 2;</code>
   */
  public static final int CLIMATE_FAN_AUTO_VALUE = 2;
  /**
   * <code>CLIMATE_FAN_LOW = 3;</code>
   */
  public static final int CLIMATE_FAN_LOW_VALUE = 3;
  /**
   * <code>CLIMATE_FAN_MEDIUM = 4;</code>
   */
  public static final int CLIMATE_FAN_MEDIUM_VALUE = 4;
  /**
   * <code>CLIMATE_FAN_HIGH = 5;</code>
   */
  public static final int CLIMATE_FAN_HIGH_VALUE = 5;
  /**
   * <code>CLIMATE_FAN_MIDDLE = 6;</code>
   */
  public static final int CLIMATE_FAN_MIDDLE_VALUE = 6;
  /**
   * <code>CLIMATE_FAN_FOCUS = 7;</code>
   */
  public static final int CLIMATE_FAN_FOCUS_VALUE = 7;
  /**
   * <code>CLIMATE_FAN_DIFFUSE = 8;</code>
   */
  public static final int CLIMATE_FAN_DIFFUSE_VALUE = 8;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ClimateFanMode valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ClimateFanMode forNumber(int value) {
    switch (value) {
      case 0: return CLIMATE_FAN_ON;
      case 1: return CLIMATE_FAN_OFF;
      case 2: return CLIMATE_FAN_AUTO;
      case 3: return CLIMATE_FAN_LOW;
      case 4: return CLIMATE_FAN_MEDIUM;
      case 5: return CLIMATE_FAN_HIGH;
      case 6: return CLIMATE_FAN_MIDDLE;
      case 7: return CLIMATE_FAN_FOCUS;
      case 8: return CLIMATE_FAN_DIFFUSE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ClimateFanMode>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ClimateFanMode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ClimateFanMode>() {
          public ClimateFanMode findValueByNumber(int number) {
            return ClimateFanMode.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return it.achdjian.sottovasoluminoso.protobuf.java.Api.getDescriptor().getEnumTypes().get(12);
  }

  private static final ClimateFanMode[] VALUES = values();

  public static ClimateFanMode valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ClimateFanMode(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:it.achdjian.sottovasoluminoso.protobuf.java.ClimateFanMode)
}

