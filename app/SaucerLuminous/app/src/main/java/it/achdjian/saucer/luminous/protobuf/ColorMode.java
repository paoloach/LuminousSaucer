// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

package it.achdjian.saucer.luminous.protobuf;

/**
 * <pre>
 * ==================== LIGHT ====================
 * </pre>
 *
 * Protobuf enum {@code it.achdjian.sottovasoluminoso.protobuf.java.ColorMode}
 */
public enum ColorMode
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>COLOR_MODE_UNKNOWN = 0;</code>
   */
  COLOR_MODE_UNKNOWN(0),
  /**
   * <code>COLOR_MODE_ON_OFF = 1;</code>
   */
  COLOR_MODE_ON_OFF(1),
  /**
   * <code>COLOR_MODE_BRIGHTNESS = 2;</code>
   */
  COLOR_MODE_BRIGHTNESS(2),
  /**
   * <code>COLOR_MODE_WHITE = 7;</code>
   */
  COLOR_MODE_WHITE(7),
  /**
   * <code>COLOR_MODE_COLOR_TEMPERATURE = 11;</code>
   */
  COLOR_MODE_COLOR_TEMPERATURE(11),
  /**
   * <code>COLOR_MODE_COLD_WARM_WHITE = 19;</code>
   */
  COLOR_MODE_COLD_WARM_WHITE(19),
  /**
   * <code>COLOR_MODE_RGB = 35;</code>
   */
  COLOR_MODE_RGB(35),
  /**
   * <code>COLOR_MODE_RGB_WHITE = 39;</code>
   */
  COLOR_MODE_RGB_WHITE(39),
  /**
   * <code>COLOR_MODE_RGB_COLOR_TEMPERATURE = 47;</code>
   */
  COLOR_MODE_RGB_COLOR_TEMPERATURE(47),
  /**
   * <code>COLOR_MODE_RGB_COLD_WARM_WHITE = 51;</code>
   */
  COLOR_MODE_RGB_COLD_WARM_WHITE(51),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>COLOR_MODE_UNKNOWN = 0;</code>
   */
  public static final int COLOR_MODE_UNKNOWN_VALUE = 0;
  /**
   * <code>COLOR_MODE_ON_OFF = 1;</code>
   */
  public static final int COLOR_MODE_ON_OFF_VALUE = 1;
  /**
   * <code>COLOR_MODE_BRIGHTNESS = 2;</code>
   */
  public static final int COLOR_MODE_BRIGHTNESS_VALUE = 2;
  /**
   * <code>COLOR_MODE_WHITE = 7;</code>
   */
  public static final int COLOR_MODE_WHITE_VALUE = 7;
  /**
   * <code>COLOR_MODE_COLOR_TEMPERATURE = 11;</code>
   */
  public static final int COLOR_MODE_COLOR_TEMPERATURE_VALUE = 11;
  /**
   * <code>COLOR_MODE_COLD_WARM_WHITE = 19;</code>
   */
  public static final int COLOR_MODE_COLD_WARM_WHITE_VALUE = 19;
  /**
   * <code>COLOR_MODE_RGB = 35;</code>
   */
  public static final int COLOR_MODE_RGB_VALUE = 35;
  /**
   * <code>COLOR_MODE_RGB_WHITE = 39;</code>
   */
  public static final int COLOR_MODE_RGB_WHITE_VALUE = 39;
  /**
   * <code>COLOR_MODE_RGB_COLOR_TEMPERATURE = 47;</code>
   */
  public static final int COLOR_MODE_RGB_COLOR_TEMPERATURE_VALUE = 47;
  /**
   * <code>COLOR_MODE_RGB_COLD_WARM_WHITE = 51;</code>
   */
  public static final int COLOR_MODE_RGB_COLD_WARM_WHITE_VALUE = 51;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ColorMode valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ColorMode forNumber(int value) {
    switch (value) {
      case 0: return COLOR_MODE_UNKNOWN;
      case 1: return COLOR_MODE_ON_OFF;
      case 2: return COLOR_MODE_BRIGHTNESS;
      case 7: return COLOR_MODE_WHITE;
      case 11: return COLOR_MODE_COLOR_TEMPERATURE;
      case 19: return COLOR_MODE_COLD_WARM_WHITE;
      case 35: return COLOR_MODE_RGB;
      case 39: return COLOR_MODE_RGB_WHITE;
      case 47: return COLOR_MODE_RGB_COLOR_TEMPERATURE;
      case 51: return COLOR_MODE_RGB_COLD_WARM_WHITE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ColorMode>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ColorMode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ColorMode>() {
          public ColorMode findValueByNumber(int number) {
            return ColorMode.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return it.achdjian.saucer.luminous.protobuf.Api.getDescriptor().getEnumTypes().get(6);
  }

  private static final ColorMode[] VALUES = values();

  public static ColorMode valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ColorMode(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:it.achdjian.sottovasoluminoso.protobuf.java.ColorMode)
}

